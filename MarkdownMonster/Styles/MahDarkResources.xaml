<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
                    mc:Ignorable="options">


    <!--<Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MahAppsTabablzControlStyle}">-->
    <Style x:Key="MarkdownMonsterTrapezoidDragableTabItemStyle"
           TargetType="{x:Type dragablz:DragablzItem}" BasedOn="{StaticResource TrapezoidDragableTabItemStyle}">
        <Setter Property="ContextMenu" Value="{DynamicResource TabItemContextMenu}" />
    </Style>

    <Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource {x:Type dragablz:TabablzControl}}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource MarkdownMonsterTrapezoidDragableTabItemStyle}" />
        <Setter Property="AdjacentHeaderItemOffset" Value="-12" />
        <Setter Property="ShowDefaultAddButton" Value="True" />
        <Setter Property="ShowDefaultCloseButton" Value="True" />
    </Style>

    <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="#009DE0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Firebrick" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="BlueItem" Color="#70B8FF" />
    <SolidColorBrush x:Key="LightThemeTitleBackground" Color="#D5DAE8" />
    <SolidColorBrush x:Key="HeadlineColor" Color="#569AD4" />

    <SolidColorBrush x:Key="SidebarHeaderBackground" Color="#555"/>


    <Style  x:Key="HeaderTextBoxStyle" TargetType="{x:Type TextBox}"
            BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="FontSize" Value="19" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{StaticResource BlueItem}" />
        <Setter Property="Padding" Value="5,2,5,3" />
    </Style>

    <Style x:Key="HeaderTextBlockStyle" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{StaticResource HeadlineColor}" />
        <Setter Property="Margin" Value="0,18,0,2" />
    </Style>

    <!-- this doesn't work-->
    <Style TargetType="{x:Type controls:MetroWindow}" BasedOn="{x:Null}">
        <Setter Property="BorderBrush" Value="#999999" />
    </Style>

    <!-- TreeView Item High-->
    <Style TargetType="{x:Type TreeView}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="#007ACB" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                 Color="White" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                 Color="#3F3F46" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                 Color="White" />
        </Style.Resources>
    </Style>


</ResourceDictionary>